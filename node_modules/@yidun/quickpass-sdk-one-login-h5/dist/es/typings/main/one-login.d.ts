import type { Options } from './types';
import type { Dispose } from './utils/dispose';
import EventEmitter from './utils/eventmitter';
import { ChinaMobile, ChinaUnion, ChinaTelcom } from './services';
import Collector from './utils/collector';
declare class NEOneLogin extends EventEmitter implements Dispose {
    options: Required<Options>;
    authIframe: HTMLIFrameElement | null | undefined;
    servicer?: ChinaMobile | ChinaUnion | ChinaTelcom;
    readonly collector?: Collector;
    readonly netCollector?: Collector;
    private hasTimeout;
    constructor(options: Options);
    private sendMessage;
    private getAuthIframeUrl;
    private preCheck;
    getToken(): Promise<void>;
    private _getToken;
    private handleProcessMessage;
    private processMessage;
    emit(event: string, ...args: any[]): boolean;
    enableLoginButton(): void;
    disableLoginButton(): void;
    displayIframe(): void;
    disposeAuthFrame(): void;
    private removeAuthFrame;
    dispose(): void;
}
export default NEOneLogin;
